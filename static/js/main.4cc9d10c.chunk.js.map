{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","homeText","class","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","newLetter","charAt","slice","i","arr","toString","ele","replace","filter","element","Alert","height","alert","role","word","lower","capitialize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4cc9d10c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.homeText}</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className =\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n    homeText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About',\r\n    homeText: 'Home'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    //change to uppercase\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\")\r\n    }\r\n    //change to lowercase\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\")\r\n    }\r\n    //clear all text\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"All cleared!\", \"success\")\r\n    }\r\n    //copy text to clipboard\r\n    const handleCopy = () => {\r\n        let text = document.getElementById('myBox')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text copied to clipboard!\", \"success\")\r\n    }\r\n    //handle whiteSpace\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\", \"success\")\r\n    }\r\n\r\n    //to capitalize first letter\r\n    const capitalizeFirstLet = () => {\r\n\r\n        let firstLett = text.charAt(0);\r\n        let newLetter = firstLett.toUpperCase();\r\n        setText(newLetter + text.slice(1));\r\n        props.showAlert(\"Capitalized first letter\", \"success\")\r\n    }\r\n\r\n    //capitalize all first letters\r\n    const capitalizeAllFirstLet = () => {\r\n        let arr = text.toString().split(\" \")\r\n        let i;\r\n        for (i = 0; i < arr.length; i++) {\r\n            let ele = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n            arr[i] = ele\r\n        }\r\n        let newText = arr.toString().replace(/,/g, \" \");\r\n        setText(newText)\r\n        props.showAlert(\"Capitalized all first letters\", \"success\")\r\n    }\r\n\r\n    //change target values\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1 >{props.heading} </h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear all text</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpace}>Remove extra space</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={capitalizeFirstLet}>Capitalize first letter</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={capitalizeAllFirstLet}>Capitalize all first letter</button>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2>Your text Summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview! Enter something in the textbox to preview it here \"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitialize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n<div style={{height:'50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitialize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light') //wether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)  //to show alerts when something happens\n\n  // alert function \n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    //to hide alert after some time\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  //toggle mode for fucntion dark mode\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"><About /></Route> */}\n          {/* <Route exact path=\"/\">  */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n       {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}